<?php

// @formatter:off
/**
 * A helper file for your Eloquent Models
 * Copy the phpDocs from this file to the correct Model,
 * And remove them from this file, to prevent double declarations.
 *
 * @author Barry vd. Heuvel <barryvdh@gmail.com>
 */


namespace App\Domain\Experience\Models{
    /**
     * App\Domain\Experience\Models\Achievement
     *
     * @property int $id
     * @property string $slug
     * @property string $title
     * @property string $description
     * @property \App\Domain\Experience\Enums\AchievementType $type
     * @property array $data
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @method static \Database\Factories\AchievementFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement forExperience()
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement forPullRequest()
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement forSeries(\App\Models\Series $series)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement query()
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereData($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereSlug($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereType($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Achievement whereUpdatedAt($value)
     */
    class Achievement extends \Eloquent {}
}

namespace App\Domain\Experience\Projections{
    /**
     * App\Domain\Experience\Projections\UserAchievementProjection
     *
     * @property string $uuid
     * @property int $user_id
     * @property int|null $achievement_id
     * @property string $slug
     * @property string $title
     * @property string $description
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection andSlug(string $slug)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection forUser(int $userId)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection query()
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereAchievementId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereSlug($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereUserId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserAchievementProjection whereUuid($value)
     */
    class UserAchievementProjection extends \Eloquent {}
}

namespace App\Domain\Experience\Projections{
    /**
     * App\Domain\Experience\Projections\UserExperienceProjection
     *
     * @property string $uuid
     * @property int $user_id
     * @property int $amount
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property \App\Domain\Experience\Enums\ExperienceType $type
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection query()
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection whereAmount($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection whereUserId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|UserExperienceProjection whereUuid($value)
     */
    class UserExperienceProjection extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\Activation
     *
     * @property int $id
     * @property string $name
     * @property string $uuid
     * @property int $license_id
     * @property array|null $signed_activation
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property string|null $current_version
     * @property string|null $arch
     * @property string|null $platform
     * @property string|null $os_version
     * @property-read \App\Domain\Shop\Models\License $license
     * @method static \Database\Factories\Domain\Shop\Models\ActivationFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Activation newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Activation query()
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereArch($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereCurrentVersion($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereLicenseId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereOsVersion($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation wherePlatform($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereSignedActivation($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Activation whereUuid($value)
     */
    class Activation extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\Bundle
     *
     * @property int $id
     * @property string $title
     * @property string $slug
     * @property string|null $description
     * @property string|null $long_description
     * @property int $price_in_usd_cents
     * @property int $sort_order
     * @property bool $visible
     * @property string $paddle_product_id
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read mixed $formatted_description
     * @property-read mixed $formatted_long_description
     * @property-read mixed $image
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\BundlePrice[] $prices
     * @property-read int|null $prices_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchasable[] $purchasables
     * @property-read int|null $purchasables_count
     * @method static \Database\Factories\Domain\Shop\Models\BundleFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle ordered(string $direction = 'asc')
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle query()
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereLongDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle wherePaddleProductId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle wherePriceInUsdCents($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereSlug($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereSortOrder($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Bundle whereVisible($value)
     */
    class Bundle extends \Eloquent implements \Spatie\MediaLibrary\HasMedia, \Spatie\EloquentSortable\Sortable {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\BundlePrice
     *
     * @property int $id
     * @property int $bundle_id
     * @property string $country_code
     * @property string $currency_code
     * @property int $amount
     * @property bool $overridden
     * @property string|null $currency_symbol
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read \App\Domain\Shop\Models\Bundle|null $bundle
     * @method static \Database\Factories\Domain\Shop\Models\BundlePriceFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice query()
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereAmount($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereBundleId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereCountryCode($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereCurrencyCode($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereCurrencySymbol($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereOverridden($value)
     * @method static \Illuminate\Database\Eloquent\Builder|BundlePrice whereUpdatedAt($value)
     */
    class BundlePrice extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\ConversionRate
     *
     * @property int $id
     * @property string $country_code
     * @property string $currency_code
     * @property float $ppp_conversion_factor
     * @property float $exchange_rate
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property string|null $currency_symbol
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate query()
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate whereCountryCode($value)
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate whereCurrencyCode($value)
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate whereCurrencySymbol($value)
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate whereExchangeRate($value)
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate wherePppConversionFactor($value)
     * @method static \Illuminate\Database\Eloquent\Builder|ConversionRate whereUpdatedAt($value)
     */
    class ConversionRate extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\License
     *
     * @property int $id
     * @property int $purchase_assignment_id
     * @property string $key
     * @property string|null $domain
     * @property int $satis_authentication_count
     * @property \Illuminate\Support\Carbon|null $expires_at
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property \Illuminate\Support\Carbon|null $expiration_warning_mail_sent_at
     * @property \Illuminate\Support\Carbon|null $expiration_mail_sent_at
     * @property \Illuminate\Support\Carbon|null $second_expiration_mail_sent_at
     * @property string|null $name
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Activation[] $activations
     * @property-read int|null $activations_count
     * @property-read \App\Domain\Shop\Models\PurchaseAssignment|null $assignment
     * @method static \Database\Factories\Domain\Shop\Models\LicenseFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|License forProduct(\App\Domain\Shop\Models\Product $product)
     * @method static \Illuminate\Database\Eloquent\Builder|License newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|License newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|License query()
     * @method static \Illuminate\Database\Eloquent\Builder|License whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereDomain($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereExpirationMailSentAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereExpirationWarningMailSentAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereExpired()
     * @method static \Illuminate\Database\Eloquent\Builder|License whereExpiresAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereKey($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereNotExpired()
     * @method static \Illuminate\Database\Eloquent\Builder|License wherePurchaseAssignmentId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereSatisAuthenticationCount($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereSecondExpirationMailSentAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|License whereUpdatedAt($value)
     */
    class License extends \Eloquent implements \Illuminate\Contracts\Auth\Authenticatable {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\Product
     *
     * @property int $id
     * @property string $title
     * @property string $slug
     * @property string $description
     * @property string|null $long_description
     * @property int $external
     * @property string $url
     * @property string $action_url
     * @property string $action_label
     * @property int $sort_order
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property bool $visible
     * @property string|null $private_key
     * @property int $maximum_activation_count
     * @property-read mixed $formatted_description
     * @property-read mixed $formatted_long_description
     * @property-read mixed $image
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchasable[] $purchasables
     * @property-read int|null $purchasables_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchasable[] $purchasablesWithoutRenewals
     * @property-read int|null $purchasables_without_renewals_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Release[] $releases
     * @property-read int|null $releases_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchasable[] $renewals
     * @property-read int|null $renewals_count
     * @method static \Database\Factories\Domain\Shop\Models\ProductFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Product newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Product newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Product ordered(string $direction = 'asc')
     * @method static \Illuminate\Database\Eloquent\Builder|Product query()
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereActionLabel($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereActionUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereExternal($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereLongDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereMaximumActivationCount($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product wherePrivateKey($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereSlug($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereSortOrder($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Product whereVisible($value)
     */
    class Product extends \Eloquent implements \Spatie\MediaLibrary\HasMedia, \Spatie\EloquentSortable\Sortable {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\Purchasable
     *
     * @property int $id
     * @property int|null $renewal_purchasable_id
     * @property string $title
     * @property string $description
     * @property string|null $renewal_mail_incentive
     * @property int $sort_order
     * @property string $type
     * @property int $requires_license
     * @property string $paddle_product_id
     * @property int $product_id
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property string|null $repository_access
     * @property int|null $analytics_goal_id
     * @property array|null $satis_packages
     * @property string|null $getting_started_url
     * @property string|null $getting_started_description
     * @property bool $released
     * @property int $price_in_usd_cents
     * @property string|null $discount_name
     * @property int|null $discount_percentage
     * @property \Illuminate\Support\Carbon|null $discount_starts_at
     * @property \Illuminate\Support\Carbon|null $discount_expires_at
     * @property string|null $extra_links
     * @property bool $is_lifetime
     * @property-read mixed $formatted_description
     * @property-read mixed $image
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @property-read Purchasable|null $originalPurchasable
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\PurchasablePrice[] $prices
     * @property-read int|null $prices_count
     * @property-read \App\Domain\Shop\Models\Product $product
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchase[] $purchases
     * @property-read int|null $purchases_count
     * @property-read Purchasable|null $renewalPurchasable
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Series[] $series
     * @property-read int|null $series_count
     * @method static \Database\Factories\Domain\Shop\Models\PurchasableFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable ordered(string $direction = 'asc')
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable query()
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereAnalyticsGoalId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereDiscountExpiresAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereDiscountName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereDiscountPercentage($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereDiscountStartsAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereExtraLinks($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereGettingStartedDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereGettingStartedUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereIsLifetime($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable wherePaddleProductId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable wherePriceInUsdCents($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereProductId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereReleased($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereRenewalMailIncentive($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereRenewalPurchasableId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereRepositoryAccess($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereRequiresLicense($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereSatisPackages($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereSortOrder($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereType($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchasable whereUpdatedAt($value)
     */
    class Purchasable extends \Eloquent implements \Spatie\MediaLibrary\HasMedia, \Spatie\EloquentSortable\Sortable {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\PurchasablePrice
     *
     * @property int $id
     * @property int $purchasable_id
     * @property string $country_code
     * @property string $currency_code
     * @property int $amount
     * @property bool $overridden
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property string|null $currency_symbol
     * @property-read \App\Domain\Shop\Models\Purchasable $purchasable
     * @method static \Database\Factories\Domain\Shop\Models\PurchasablePriceFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice query()
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereAmount($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereCountryCode($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereCurrencyCode($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereCurrencySymbol($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereOverridden($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice wherePurchasableId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchasablePrice whereUpdatedAt($value)
     */
    class PurchasablePrice extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\Purchase
     *
     * @property int $id
     * @property int $user_id
     * @property int|null $purchasable_id
     * @property int|null $bundle_id
     * @property int|null $receipt_id
     * @property array|null $paddle_webhook_payload
     * @property string $paddle_fee
     * @property string $earnings
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property int $quantity
     * @property array|null $passthrough
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\PurchaseAssignment[] $assignments
     * @property-read int|null $assignments_count
     * @property-read \App\Domain\Shop\Models\Bundle|null $bundle
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\License[] $licenses
     * @property-read int|null $licenses_count
     * @property-read \App\Domain\Shop\Models\Purchasable|null $purchasable
     * @property-read \Laravel\Paddle\Receipt|null $receipt
     * @property-read \App\Models\User $user
     * @method static \Database\Factories\Domain\Shop\Models\PurchaseFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase forProduct(\App\Domain\Shop\Models\Product $product)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase query()
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereBundleId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereEarnings($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase wherePaddleFee($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase wherePaddleWebhookPayload($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase wherePassthrough($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase wherePurchasableId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereQuantity($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereReceiptId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereUser(\App\Models\User $user)
     * @method static \Illuminate\Database\Eloquent\Builder|Purchase whereUserId($value)
     */
    class Purchase extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\PurchaseAssignment
     *
     * @property int $id
     * @property int $purchase_id
     * @property int $purchasable_id
     * @property int $user_id
     * @property bool $has_repository_access
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\License[] $licenses
     * @property-read int|null $licenses_count
     * @property-read \App\Domain\Shop\Models\Purchasable $purchasable
     * @property-read \App\Domain\Shop\Models\Purchase $purchase
     * @property-read \App\Models\User $user
     * @method static \Database\Factories\Domain\Shop\Models\PurchaseAssignmentFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment forProduct(\App\Domain\Shop\Models\Product $product)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment query()
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment whereHasRepositoryAccess($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment wherePurchasableId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment wherePurchase(\App\Domain\Shop\Models\Purchase $purchase)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment wherePurchaseId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment whereUser(\App\Models\User $user)
     * @method static \Illuminate\Database\Eloquent\Builder|PurchaseAssignment whereUserId($value)
     */
    class PurchaseAssignment extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\Referrer
     *
     * @property int $id
     * @property string $slug
     * @property string $uuid
     * @property int|null $discount_percentage
     * @property \Illuminate\Support\Carbon|null $discount_period_ends_at
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property int $click_count
     * @property \Illuminate\Support\Carbon|null $last_clicked_at
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Bundle[] $bundles
     * @property-read int|null $bundles_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchasable[] $purchasables
     * @property-read int|null $purchasables_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchase[] $usedForPurchases
     * @property-read int|null $used_for_purchases_count
     * @method static \Database\Factories\Domain\Shop\Models\ReferrerFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer query()
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereClickCount($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereDiscountPercentage($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereDiscountPeriodEndsAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereLastClickedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereSlug($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Referrer whereUuid($value)
     */
    class Referrer extends \Eloquent {}
}

namespace App\Domain\Shop\Models{
    /**
     * App\Domain\Shop\Models\Release
     *
     * @property int $id
     * @property int $product_id
     * @property string $version
     * @property string $notes
     * @property string $notes_html
     * @property bool $released
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property \Illuminate\Support\Carbon|null $released_at
     * @property-read \App\Domain\Shop\Models\Product $product
     * @method static \Database\Factories\Domain\Shop\Models\ReleaseFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Release newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Release newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Release query()
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereNotes($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereNotesHtml($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereProductId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereReleased($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereReleasedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Release whereVersion($value)
     */
    class Release extends \Eloquent {}
}

namespace App\Models{
    /**
     * App\Models\Ad
     *
     * @property int $id
     * @property string $name
     * @property string $click_redirect_url
     * @property string $image
     * @property bool $active
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Repository[] $repositories
     * @property-read int|null $repositories_count
     * @method static \Illuminate\Database\Eloquent\Builder|Ad active()
     * @method static \Database\Factories\AdFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Ad newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Ad newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Ad query()
     * @method static \Illuminate\Database\Eloquent\Builder|Ad whereActive($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Ad whereClickRedirectUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Ad whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Ad whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Ad whereImage($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Ad whereName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Ad whereUpdatedAt($value)
     */
    class Ad extends \Eloquent {}
}

namespace App\Models{
    /**
     * App\Models\Image
     *
     * @property int $id
     * @property string $path
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @method static \Illuminate\Database\Eloquent\Builder|Image newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Image newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Image query()
     * @method static \Illuminate\Database\Eloquent\Builder|Image whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Image whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Image wherePath($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Image whereUpdatedAt($value)
     */
    class Image extends \Eloquent implements \Spatie\MediaLibrary\HasMedia {}
}

namespace App\Models{
    /**
     * App\Models\Insight
     *
     * @property int $id
     * @property string $title
     * @property string $url
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property string|null $website
     * @property string $short_summary
     * @method static \Database\Factories\InsightFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Insight newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Insight newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Insight query()
     * @method static \Illuminate\Database\Eloquent\Builder|Insight whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Insight whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Insight whereShortSummary($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Insight whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Insight whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Insight whereUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Insight whereWebsite($value)
     */
    class Insight extends \Eloquent implements \Spatie\Feed\Feedable {}
}

namespace App\Models{
    /**
     * App\Models\Member
     *
     * @property int $id
     * @property string $first_name
     * @property string $last_name
     * @property string $role
     * @property string $description
     * @property string $email
     * @property string|null $twitter
     * @property string|null $github
     * @property string|null $website
     * @property int $founder
     * @property int $public_email
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read string $slug
     * @property-read string $website_domain
     * @method static \Illuminate\Database\Eloquent\Builder|Member employee()
     * @method static \Illuminate\Database\Eloquent\Builder|Member founder()
     * @method static \Illuminate\Database\Eloquent\Builder|Member newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Member newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Member query()
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereEmail($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereFirstName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereFounder($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereGithub($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereLastName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member wherePublicEmail($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereRole($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereTwitter($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Member whereWebsite($value)
     */
    class Member extends \Eloquent {}
}

namespace App\Models{
    /**
     * App\Models\Playlist
     *
     * @property int $id
     * @property string $name
     * @property string $spotify_url
     * @property string $apple_music_url
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read mixed $image
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @method static \Database\Factories\PlaylistFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist query()
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist whereAppleMusicUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist whereName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist whereSpotifyUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Playlist whereUpdatedAt($value)
     */
    class Playlist extends \Eloquent implements \Spatie\MediaLibrary\HasMedia {}
}

namespace App\Models{
    /**
     * App\Models\Postcard
     *
     * @property int $id
     * @property string $sender
     * @property string|null $city
     * @property string|null $country
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property-read mixed $image
     * @property-read string $location
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @method static \Database\Factories\PostcardFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard query()
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard whereCity($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard whereCountry($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard whereSender($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Postcard whereUpdatedAt($value)
     */
    class Postcard extends \Eloquent implements \Spatie\MediaLibrary\HasMedia {}
}

namespace App\Models{
    /**
     * App\Models\Repository
     *
     * @property int $id
     * @property string $name
     * @property string|null $description
     * @property array|null $topics
     * @property string|null $documentation_url
     * @property string|null $blogpost_url
     * @property int $stars
     * @property int|null $downloads
     * @property \Illuminate\Support\Carbon $repository_created_at
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property bool $new
     * @property int $highlighted
     * @property string|null $type
     * @property string|null $language
     * @property int $visible
     * @property int|null $ad_id
     * @property bool $ad_should_be_randomized
     * @property-read \App\Models\Ad|null $ad
     * @property-read string $full_name
     * @property-read string $language_color
     * @property-read string $url
     * @method static \Illuminate\Database\Eloquent\Builder|Repository adShouldBeRandomized()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository applySort(string $sort)
     * @method static \Database\Factories\RepositoryFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository highlighted()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository packages()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository projects()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository query()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository search(string $search)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository visible()
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereAdId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereAdShouldBeRandomized($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereBlogpostUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereDocumentationUrl($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereDownloads($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereHighlighted($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereLanguage($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereNew($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereRepositoryCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereStars($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereTopics($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereType($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Repository whereVisible($value)
     */
    class Repository extends \Eloquent {}
}

namespace App\Models{
    /**
     * App\Models\Series
     *
     * @property int $id
     * @property string $title
     * @property string $slug
     * @property string $description
     * @property int $sort_order
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property int $visible
     * @property string|null $introduction
     * @property-read mixed $formatted_description
     * @property-read mixed $image
     * @property-read string $url
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchasable[] $purchasables
     * @property-read int|null $purchasables_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Video[] $videos
     * @property-read int|null $videos_count
     * @method static \Database\Factories\SeriesFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Series newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Series newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Series ordered(string $direction = 'asc')
     * @method static \Illuminate\Database\Eloquent\Builder|Series query()
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereIntroduction($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereSlug($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereSortOrder($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Series whereVisible($value)
     */
    class Series extends \Eloquent implements \Spatie\MediaLibrary\HasMedia, \Spatie\EloquentSortable\Sortable {}
}

namespace App\Models{
    /**
     * App\Models\Technology
     *
     * @property int $id
     * @property string $name
     * @property \App\Models\Enums\TechnologyType $type
     * @property string $website_url
     * @property string $description
     * @property array $recommended_by
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property int $sort_order
     * @property-read string $avatar
     * @property-read \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection|\Spatie\MediaLibrary\MediaCollections\Models\Media[] $media
     * @property-read int|null $media_count
     * @method static \Database\Factories\TechnologyFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Technology newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Technology ordered(string $direction = 'asc')
     * @method static \Illuminate\Database\Eloquent\Builder|Technology query()
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereRecommendedBy($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereSortOrder($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereType($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Technology whereWebsiteUrl($value)
     */
    class Technology extends \Eloquent implements \Spatie\MediaLibrary\HasMedia, \Spatie\EloquentSortable\Sortable {}
}

namespace App\Models{
    /**
     * App\Models\User
     *
     * @property int $id
     * @property \App\Support\Uuid\Uuid|null $uuid
     * @property string $name
     * @property string $email
     * @property string $password
     * @property string|null $remember_token
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property string|null $apple_id
     * @property int|null $github_id
     * @property string|null $github_username
     * @property int|null $is_sponsor
     * @property string|null $avatar
     * @property bool $is_admin
     * @property \Illuminate\Support\Carbon|null $next_purchase_discount_period_ends_at
     * @property \Illuminate\Support\Carbon|null $sponsor_gift_given_at
     * @property bool $has_access_to_unreleased_products
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Experience\Projections\UserAchievementProjection[] $achievements
     * @property-read int|null $achievements_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\PurchaseAssignment[] $assignments
     * @property-read int|null $assignments_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\PurchaseAssignment[] $assignmentsWithoutRenewals
     * @property-read int|null $assignments_without_renewals_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Video[] $completedVideos
     * @property-read int|null $completed_videos_count
     * @property-read \Laravel\Paddle\Customer|null $customer
     * @property-read \App\Domain\Experience\Projections\UserExperienceProjection|null $experience
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\License[] $licenses
     * @property-read int|null $licenses_count
     * @property-read \Illuminate\Notifications\DatabaseNotificationCollection|\Illuminate\Notifications\DatabaseNotification[] $notifications
     * @property-read int|null $notifications_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchase[] $purchases
     * @property-read int|null $purchases_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Domain\Shop\Models\Purchase[] $purchasesWithoutRenewals
     * @property-read int|null $purchases_without_renewals_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\Laravel\Paddle\Receipt[] $receipts
     * @property-read int|null $receipts_count
     * @property-read \Illuminate\Database\Eloquent\Collection|\Laravel\Paddle\Subscription[] $subscriptions
     * @property-read int|null $subscriptions_count
     * @method static \Database\Factories\UserFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|User newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|User newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|User query()
     * @method static \Illuminate\Database\Eloquent\Builder|User whereAppleId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereAvatar($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereEmail($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereGithubId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereGithubUsername($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereHasAccessToUnreleasedProducts($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereIsAdmin($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereIsSponsor($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereName($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereNextPurchaseDiscountPeriodEndsAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User wherePassword($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereRememberToken($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereSponsorGiftGivenAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|User whereUuid($value)
     */
    class User extends \Eloquent {}
}

namespace App\Models{
    /**
     * App\Models\Video
     *
     * @property int $id
     * @property int $series_id
     * @property string $vimeo_id
     * @property string|null $chapter
     * @property string $title
     * @property string $slug
     * @property string|null $description
     * @property int $sort_order
     * @property int $runtime
     * @property string $thumbnail
     * @property string $display
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @property bool $downloadable
     * @property string $hash
     * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\VideoCompletion[] $completions
     * @property-read int|null $completions_count
     * @property-read string $download_hd_size
     * @property-read string $download_hd_url
     * @property-read string $download_sd_size
     * @property-read string $download_sd_url
     * @property-read string $formatted_description
     * @property-read string $url
     * @property-read \App\Models\Series $series
     * @method static \Database\Factories\VideoFactory factory(...$parameters)
     * @method static \Illuminate\Database\Eloquent\Builder|Video newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Video newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|Video ordered(string $direction = 'asc')
     * @method static \Illuminate\Database\Eloquent\Builder|Video query()
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereChapter($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereDescription($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereDisplay($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereDownloadable($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereHash($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereRuntime($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereSeriesId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereSlug($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereSortOrder($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereThumbnail($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereTitle($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|Video whereVimeoId($value)
     */
    class Video extends \Eloquent implements \Spatie\EloquentSortable\Sortable {}
}

namespace App\Models{
    /**
     * App\Models\VideoCompletion
     *
     * @property int $id
     * @property int $user_id
     * @property int $video_id
     * @property \Illuminate\Support\Carbon|null $created_at
     * @property \Illuminate\Support\Carbon|null $updated_at
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion newModelQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion newQuery()
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion query()
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion whereCreatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion whereId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion whereUpdatedAt($value)
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion whereUserId($value)
     * @method static \Illuminate\Database\Eloquent\Builder|VideoCompletion whereVideoId($value)
     */
    class VideoCompletion extends \Eloquent {}
}

